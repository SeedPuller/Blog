{"expireTime":9007200880603433000,"key":"transformer-remark-markdown-html-41087170a1255b1fc7790cdd17f0f1f1-gatsby-remark-imagesgatsby-remark-audiogatsby-remark-external-linksgatsby-remark-prismjs-","val":"<p>توی این فصل در مبحث رشته ها در سی++ بیشتر عمیق میشیم. درواقع کلاس <code class=\"language-text\">string</code> از <em>STL</em> رو بررسی می‌کنیم.</p>\n<p>پست کوتاهیه چون بیشتر چیزها رو بلد بودم :)</p>\n<h2>تابع compare</h2>\n<p>این تابع جالبیه که باهاش میتونیم بخش خاصی از یک رشته رو با بخش خاصی از یک رشته دیگه مقایسه کنیم.</p>\n<p>اینطوری:</p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\">string str1<span class=\"token punctuation\">{</span><span class=\"token string\">\"This is string\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\nstring str2<span class=\"token punctuation\">{</span><span class=\"token string\">\"oh This string\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>str1<span class=\"token punctuation\">.</span><span class=\"token function\">compare</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> str2<span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"token comment\">// do something</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2>تابع <code class=\"language-text\">replace</code> و نکته‌ش</h2>\n<p>تابع <code class=\"language-text\">replace</code> میاد و از مکانی که براش مشخص می‌کنیم میگرده و مقدار مشخص شده رو پیدا می‌کنه و رشتهٔ جایگزین رو بجاش می‌ذاره.</p>\n<p>نکته‌ش اینه که اگر مثلا شما دنبال یک رشته بگردید که ۲ کاراکتر داره و\nبخواین این زیر رشته رو با یک رشته که ۴ کاراکتر داره جایگزین کنید، ۲\nکاراکتر بعد از رشته مورد جستجوی ما از بین میره.</p>\n<p>الآن حوصله نوشتن مثال ندارم. امیدوارم گنگ نگفته باشم (:</p>\n<p>برای اینکه به این مشکل برنخوریم بهتره که اول موقعیت رخداد رشته مورد جستجو رو با استفاده از تابع <code class=\"language-text\">find</code> پیدا بکنیم و بعد با استفاده از تابع <code class=\"language-text\">insert</code> رشته مورد نظرمون رو بذاریم بجاش.</p>\n<h2>تبدیل رشته به عدد</h2>\n<p>توابعی که برای اینکار وجود دارن اینا هستن:</p>\n<p><img src=\"https://seedpuller.space/wp-content/uploads/2020/08/image-3.png\"></p>\n<p>تابع هایی که می‌بینیم درواقع ۳ تا ورودی دارن(به جز تابع های مربوط به\nاعداد اعشاری که ورودی سوم رو ندارن) که دوتای آخرشون default دارن.</p>\n<ul>\n<li>ورودی اول: رشته ای که میخوایم به عدد تبدیل بشه</li>\n<li>یک اشاره گر به size_t برای ذخیره کردن اولین اندیسی که این تابع قادر به تبدیلش نبوده</li>\n<li>یک عدد صحیح بین ۲ تا ۳۶ که مبنای عدد رو مشخص می‌کنه.</li>\n</ul>\n<p>به عنوان مثال فرض کنیم <code class=\"language-text\">str</code> یک رشته است که مقدار <em>“123”</em> در اون ذخیره شده. اینطور میشه به <code class=\"language-text\">int</code> تبدیلش کرد:</p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">int</span> convertedInt <span class=\"token operator\">=</span> <span class=\"token function\">stoi</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">,</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>دوتا آرگومان آخر دلخواه هستند و میشه اونهارو ننوشت.</p>\n<h2>پایان</h2>\n<p>خیلی خوبه که بیشتر نکات این چندفصل آخر رو بلد بودم و دارم سریع پیش میرم. (: باعث میشه اعتماد به نفس بهتری داشته باشم.</p>"}