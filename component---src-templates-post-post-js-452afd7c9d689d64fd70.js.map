{"version":3,"sources":["webpack:///./src/templates/post/post.js","webpack:///./src/templates/post/post.module.less"],"names":["Post","data","markdownRemark","html","frontmatter","title","cover","childImageSharp","fluid","fixed","excerpt","path","className","description","keywords","Config","imageUrl","src","style","bannerImgContainer","bannerImg","alt","blogArticle","dangerouslySetInnerHTML","__html","module","exports"],"mappings":"+QAgIeA,UAjHF,SAAC,GAIP,IAAD,IAHJC,KACEC,eAAkBC,EAEhB,EAFgBA,KAAMC,EAEtB,EAFsBA,YAIxBC,EAMED,EANFC,MADF,EAOID,EALFE,MACEC,gBAAmBC,EAHvB,EAGuBA,MAAOC,EAH9B,EAG8BA,MAE5BC,EAEEN,EAFFM,QACAC,EACEP,EADFO,KASF,OACE,uBAAQC,UAAU,gBAChB,uBAAQA,UAAU,aAChB,kBAAC,IAAD,CACEP,MAAOA,EACPQ,YAAaH,EACbC,KAAMA,EACNG,SAAUC,IAAOD,SACjBE,SAAUR,EAAMS,MAElB,kBAAC,IAAD,MACA,kBAAC,IAAD,KACE,yBAAKL,UAAU,kBACb,4BAAKP,GACL,yBAAKO,UAAWM,IAAMC,oBACpB,kBAAC,IAAD,CACEP,UAAWM,IAAME,UACjBZ,MAAOA,EACPH,MAAOK,EACPW,IAAKhB,EACLI,MAAOA,KAGX,6BACEG,UAAWM,IAAMI,YACjBC,wBAAyB,CAAEC,OAAQrB,W,8CC3DjDsB,EAAOC,QAAU,CAAC,mBAAqB,yCAAyC,UAAY,gCAAgC,YAAc,oC","file":"component---src-templates-post-post-js-452afd7c9d689d64fd70.js","sourcesContent":["import { Layout } from 'antd'\nimport { graphql } from 'gatsby'\nimport Img from 'gatsby-image'\nimport 'prismjs/themes/prism-solarizedlight.css'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport Config from '../../../config'\n// import Comment from '../../components/Comment'\nimport Header from '../../components/PageLayout/Header'\nimport SidebarWrapper from '../../components/PageLayout/Sidebar'\nimport SEO from '../../components/Seo'\n// import Utils from '../../utils/pageUtils'\nimport './highlight-syntax.less'\nimport style from './post.module.less'\n\nconst Post = ({\n  data: {\n    markdownRemark: { html, frontmatter },\n  },\n}) => {\n  const {\n    title,\n    cover: {\n      childImageSharp: { fluid, fixed },\n    },\n    excerpt,\n    path,\n  } = frontmatter\n\n  // const canonicalUrl = Utils.resolvePageUrl(\n  //   Config.siteUrl,\n  //   Config.pathPrefix,\n  //   path\n  // )\n\n  return (\n    <Layout className=\"outerPadding\">\n      <Layout className=\"container\">\n        <SEO\n          title={title}\n          description={excerpt}\n          path={path}\n          keywords={Config.keywords}\n          imageUrl={fluid.src}\n        />\n        <Header />\n        <SidebarWrapper>\n          <div className=\"marginTopTitle\">\n            <h1>{title}</h1>\n            <div className={style.bannerImgContainer}>\n              <Img\n                className={style.bannerImg}\n                fluid={fluid}\n                title={excerpt}\n                alt={title}\n                fixed={fixed}\n              />\n            </div>\n            <article\n              className={style.blogArticle}\n              dangerouslySetInnerHTML={{ __html: html }}\n            />\n            {/* <Comment\n              pageCanonicalUrl={canonicalUrl}\n              title={title}\n              path={path}\n            /> */}\n          </div>\n        </SidebarWrapper>\n      </Layout>\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query($postPath: String!) {\n    markdownRemark(frontmatter: { path: { eq: $postPath } }) {\n      html\n      timeToRead\n      frontmatter {\n        title\n        date(formatString: \"DD MMM YYYY\")\n        tags\n        path\n        excerpt\n        cover {\n          childImageSharp {\n            fluid(maxWidth: 1000) {\n              ...GatsbyImageSharpFluid_tracedSVG\n            }\n            fixed {\n              srcWebp\n            }\n          }\n        }\n      }\n    }\n    allMarkdownRemark(\n      filter: {\n        frontmatter: { path: { ne: $postPath } }\n        fileAbsolutePath: { regex: \"/index.md$/\" }\n      }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            path\n            title\n            tags\n            excerpt\n            cover {\n              childImageSharp {\n                fluid(maxWidth: 600) {\n                  ...GatsbyImageSharpFluid_tracedSVG\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nPost.propTypes = {\n  data: PropTypes.any,\n}\n\nexport default Post\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bannerImgContainer\":\"post-module--bannerImgContainer--3SopW\",\"bannerImg\":\"post-module--bannerImg--2yAgf\",\"blogArticle\":\"post-module--blogArticle--1Ro02\"};"],"sourceRoot":""}