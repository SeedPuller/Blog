[ { "title": "یادداشت بداهه۹", "url": "/posts/Inner-Struggle9/", "categories": "Inner Struggle", "tags": "Inner Struggle", "date": "2021-07-01 00:00:00 +0430", "snippet": "قرار بود بیشتر از اینکه توی این وبلاگ چسناله کنم مطالب درست و حسابی بنویسم. أه. موسیقی‌ای از Marek Iwaszkiewicz به نام Stranger درحال پخش شدنه. پیانوی بی‌کلامه. نمی‌دونم چی باید بنویسم. عملا چیزی به ذهنم نمی‌رسه و کمی هم دارم خودسانسوری انجام می‌دم چراکه تا همین الآنش هم زیادی احساسات درونیم رو د..." }, { "title": "یادداشت بداهه۸", "url": "/posts/Inner-Struggle8/", "categories": "Inner Struggle", "tags": "Inner Struggle", "date": "2021-06-13 00:00:00 +0430", "snippet": "سلام. ساعت ۱۳:۱۷ است. البته از ساعت ۱۳:۱۵ شروع کردم به نوشتن ولی این دو دقیقه رو داشتم دنبال آدرس این وبسایت که داخلش متن های مارک‌دان رو به فارسی می‌نویسم می‌گشتم.از آخرین باری که نوشتم حدود ۲ ماه می‌گذره. حقیقتش اینه که در تقریبا یکماه گذشته حالم خیلی خوب بوده. تازه کار هم پیدا کردم! :)از کارم ..." }, { "title": "یادداشت بداهه۷", "url": "/posts/Inner-Struggle7/", "categories": "Inner Struggle", "tags": "Inner Struggle", "date": "2021-04-26 00:00:00 +0430", "snippet": "دیشب بد خوابیدم. از ساعت ۲ تا ۵ صبح چندین بار بیدار شدم. از ۵ صبح دیگر خوابم نبرد. حالا دیگر گلو درد هم اضافه شده‌‌است. این هم گویی یکجور سبک زندگی‌ست. سرعت تایپ کردنم کمتر شده. دستم به روی کیبورد حرکت نمی‌کند. کلمات با غلط املایی بسیار تایپ می‌کنم. ۳ روز اخیر به شکل بدی گذشته. سر درد، سنگینی، ن..." }, { "title": "راه حلی برای ازبین بردن جرم و جنایت در جامعه", "url": "/posts/Solution-for-crimes/", "categories": "اجتماعی", "tags": "اجتماع, جامعه, جرم, مجرم, اعدام, زندان, حبس, جامعه شناسی", "date": "2021-04-24 00:00:00 +0430", "snippet": "جرم و جنایت در منطقه ما افزایش چشمگیری داشته. تقریبا هر دو هفته یکبار یک قمه‌کشی/زورگیری/دعوا رو می‌بینم و هر هفته هم خبرشون رو می‌شنوم. هفته قبل هم کابل های برق محل ما رو دزدیدن. کاری به دلایلش(که یکیشون اجازه ساخت و ساز و مهاجرت افراد از شهر های دیگه به اینجاست) ندارم. توی ذهنم همیشه به این فکر..." }, { "title": "یادداشت بداهه۶", "url": "/posts/Inner-Struggle6/", "categories": "Inner Struggle", "tags": "Inner Struggle", "date": "2021-04-23 00:00:00 +0430", "snippet": "دو روز گذشت. هنوز نتوانسته‌ام تمرکزم را آنطور که مایل بودم به دست بیاورم. دیروز را به کل به فنا دادم. امروز راه هم تا اکنون که ساعت ۱۴:۱۵ است به فنا داده ام. موسیقی در گوشم می‌خواند(تقریبا همیشه وقتی درم برای اینجا می‌نویسم این اتفاق می‌افتد). من سعی می‌کنم با همه مهربان باشم ولی با یک گونه از ان..." }, { "title": "یادداشت بداهه۵", "url": "/posts/Inner-Struggle5/", "categories": "Inner Struggle", "tags": "Inner Struggle", "date": "2021-04-21 00:00:00 +0430", "snippet": "با اینکه در هدستم آهنگ Where at Night the Wood Grouse Plays پخش می‌شود، صدای ضربان قلبم را می‌شنوم.کاری جدی به من سپرده شده است، فرصتی بسیار خوب، و از آن دقیقه ای که متوجه این فرصت شده‌ام باز از همه‌کار دست کشیده‌ام. حالا که باید بیشتر از قبل تلاش کنم، کاملا برعکس شده‌ام و هیچ تلاشی نمی‌کنم. البت..." }, { "title": "همزمانی در سی++(۵): جایگزین های mutex", "url": "/posts/concurrency-in-cpp-chapter3-5/", "categories": "سی++", "tags": "C++, concurrency in action, concurrent processing, موازی کاری, همزمانی, سی++, سی++۱۷, shared data, mutex, std::mutex, میوتکس, Dead Lock, ددلاک, std::lock, std::scoped_lock, thread, multithread, multi thread, multi threading, std::unique_lock, چند نخی, برنامه نویسی چند نخی", "date": "2021-04-18 00:00:00 +0430", "snippet": "در پست قبل درباره اینکه چه کار های دیگه‌ای میشه با mutex ها انجام داد صحبت کردیم و همچنین کلاس std::unique_ptr رو معرفی کردیم که دست ما رو برای استفاده از mutex ها باز می‌کنه. در این پست قراره که جایگزین های میوتکس ها رو بررسی کنیم و سناریو هایی رو ببینیم که برای پیاده سازیشون نیازی به استفاده از..." }, { "title": "همزمانی در سی++(۴): ژانگولر بازی با mutex و کارهای دیگر", "url": "/posts/concurrency-in-cpp-chapter3-4/", "categories": "سی++", "tags": "C++, concurrency in action, concurrent processing, موازی کاری, همزمانی, سی++, سی++۱۷, shared data, mutex, std::mutex, میوتکس, Dead Lock, ددلاک, std::lock, std::scoped_lock, thread, multithread, multi thread, multi threading, std::unique_lock, چند نخی, برنامه نویسی چند نخی", "date": "2021-04-12 00:00:00 +0430", "snippet": "در این پست درباره اینکه چطور می‌تونیم یک سری ژانگولر بازی با mutex ها دربیاریم صحبت می‌کنیم. مثلا چطور میوتکس ها رو بین scope ها جابجا کنیم، یا چطور با انعطاف بیشتری نسبت به قفل کردن mutex ها اقدام کنیم و چه‌قدر میوتکس هارو قفل نگه‌ داریم و کارهایی از این دست.انعطاف پذیری بیشتر در قفل کردن میوتکس..." }, { "title": "یادداشت بداهه۴", "url": "/posts/Inner-Struggle4/", "categories": "Inner Struggle", "tags": "Inner Struggle", "date": "2021-04-09 00:00:00 +0430", "snippet": "امشب این اجرا را دیدم و بعد از مدت ها دوباره به موسیقی های شاهین ن. گوش دادم. مخصوصا آهنگ «اینگونه». دوباره برگشتم دبه دوران دبیرستانم. تمام آن احساسات گنگ در من زنده شد. اتفاقات آن روز ها در مقابل چشمانم می‌گذرد. آیا من زنده ام؟«اینگونه بی تو؛ ببین! چنگ بر آسمان می‌زنم بی محابا…»بسیار زیباست…خوا..." }, { "title": "همزمانی در سی++(۳): Dead Lock ها", "url": "/posts/concurrency-in-cpp-chapter3-3/", "categories": "سی++", "tags": "C++, concurrency in action, concurrent processing, موازی کاری, همزمانی, سی++, سی++۱۷, shared data, mutex, std::mutex, میوتکس, Dead Lock, ددلاک, std::lock, std::scoped_lock, thread_local, Storage class specifier, thread, multithread, multi thread, multi threading, چند نخی, برنامه نویسی چند نخی", "date": "2021-04-08 00:00:00 +0430", "snippet": "خب در پست قبل این مسئله که ترد ها برای استفاده از داده باهم مسابقه می‌دن رو کمی بررسی کردیم و یک راه حل دم دست هم براش پیشنهاد دادیم. توی این پست میخوایم در مورد مشکلی بحث کنیم که یجورایی برعکس Race condition هست. توی این مشکل، ترد ها منتظر همدیگه میمونن که از یه داده ای استفاده کنن. انقدر منتظر ..." }, { "title": "همزمانی در سی++: اشتراک گذاری داده ها(۲)", "url": "/posts/concurrency-in-cpp-chapter3-2/", "categories": "سی++", "tags": "C++, concurrency in action, concurrent processing, موازی کاری, همزمانی, سی++, سی++۱۷, shared data, mutex, std::mutex, میوتکس, چند نخی, برنامه نویسی چند نخی", "date": "2021-04-07 00:00:00 +0430", "snippet": "در پست قبل درباره اینکه میوتکس(mutex) ها چی هستن و چطور می‌تونیم ازشون استفاده کنیم صحبت کردیم. رسیدیم به جایی که قرار بود Race Condition هایی که در ذات interface ما وجود داشتن رو پیدا و رفع کنیم :) بریم ببینیم چی میشه.این پست رو دارم با ماوس و کیبورد و هدست(که یه موسیقی بی‌کلام ملایم پخش می‌کنم ..." }, { "title": "یادداشت بداهه۳", "url": "/posts/Inner-Struggle-3/", "categories": "Inner Struggle", "tags": "Inner Struggle", "date": "2021-04-02 00:00:00 +0430", "snippet": "نمی‌دانم. مغزم مالامال از کلمات است اما زمان نوشتن که فرا می‌رسد نمیدانم چه باید نوشت. چه باید نوشت؟ نمیدانم چه باید نوشت.چه باید نوشت؟ نمیدانم چه باید نوشت. نمیدانم چه باید نوشت! چه باید نوشت؟ نمیدانم چه باید نوشت. قلبم فشرده است. نیرویی ماورایی قلب مرا می‌فشارد. تنفس سخت می‌گردد. احسااست تیره ..." }, { "title": "همزمانی در سی++: اشتراک گذاری داده ها(۱)", "url": "/posts/concurrency-in-cpp-chapter3-1/", "categories": "سی++", "tags": "C++, concurrency in action, concurrent processing, موازی کاری, همزمانی, سی++, سی++۱۷, shared data, mutex, std::mutex, میوتکس, چند نخی, برنامه نویسی چند نخی", "date": "2021-04-01 00:00:00 +0430", "snippet": "یکی از مزایای استفاده از تِرِد ها(threads) این هست که به ما اجازه این رو میده که یک داده واحد رو بین ترد های مختلف به اشتراک بگذاریم. در این فصل به مشکلات مربوط به اشتراک گذاری داده ها و راه‌حل های موجود می‌پردازیم.همونطور که قابلیت اشتراک یک داده بین ترد های مختلف در یک پروسه یک فایده بزرگ محسو..." }, { "title": "یادداشت بداهه۲", "url": "/posts/Inner-Struggle2/", "categories": "Inner Struggle", "tags": "Inner Struggle", "date": "2021-03-27 00:00:00 +0430", "snippet": "یا حق. ساعت حدود ده دقیقه مانده به پنج بعد از ظهر است. سه روز اخیر را به شکل خوبی نگذرانده ام. مخصوصا دو روز گذشته رنج بسیار کشیده‌ام. موسیقی ای که گوش می‌دهم باعث می‌شود نتوانم با تمرکز بنویسم. این خوب است؟ آیا تمرکز من به دلیل وجود موسیقی است که خراب می‌شود یا این عدم تمرکز را همیشه داشته‌ام؟ س..." }, { "title": "یادداشت بداهه: کشمکش درونی۱", "url": "/posts/Inner-Struggle1/", "categories": "Inner Struggle", "tags": "Inner Struggle", "date": "2021-03-22 01:00:00 +0430", "snippet": "بعداً اگر وقت کنم حتما نحوه تاریخ گذاری وبلاگم رو باید تغییر بدم که فارسی بشه(درحال حاضر انگلیسیه). جالبه، من عملا هیچکاری نمی‌کنم اما هیچوقت هم وقت ندارم.جالب تر اینکه این افکاری که همیشه به ذهن من فشار می‌آورند، زمانی که دست به کیبورد می‌شوم گویی به یک دیوار گچی تبدیل می‌شوند. احتمالا بخاطر تا..." }, { "title": "شروع وبلاگ جدید", "url": "/posts/starting-new-blog/", "categories": "", "tags": "سال نو, وبلاگ, SeedPuller, سیدپولر", "date": "2021-03-19 00:00:00 +0330", "snippet": "۲۹ اسفند سال ۱۳۹۹. ساعت ۲۲:۲۶.الآن به نظرم وبلاگم حداقل های لازم برای انتشار رو بدست آورده. مطالب وبلاگ قبلیم که وردپرس بود(و مهلت دامنه‌ش تموم شد و دیگه نه علاقه ای به تمدیدش داشتم و نه پولش رو (: ) رو تونستم با تقریب خوبی به جکیل تبدیل کنم(عکس ها از دست رفتن و باید دوباره آپلودشون کنم). بعضی از..." }, { "title": "همزمانی در سی++: مفاهیم اولیه", "url": "/posts/concurrency-in-cpp-chapter1/", "categories": "سی++", "tags": "C++, concurrency in action, concurrent processing, موازی کاری, همزمانی, سی++, سی++۱۷, چند نخی, برنامه نویسی چند نخی", "date": "2020-09-24 00:00:00 +0330", "snippet": "بالاخره شروع کردم به خوندن کتاب C++ Concurrency in action نوشته Anthony Williams. این کتاب رو باید یک ماه پیش تموم می‌کردم اما مثل همیشهخیلی کند پیش رفتم و فقط ۲ فصلش رو تا الآن خوندم و تازه دارم خلاصه فصل اول رو می‌نویسم. به خودم قول دادم که توی این هفته این کتابو تموم کنم و باید انجامش بدم.این ..." }, { "title": "اشاره گر های هوشمند: shared_ptr", "url": "/posts/smart-pointers-shared-ptr/", "categories": "سی++", "tags": "C++, c++ modern, RAII, shared_ptr, smart pointer, weak_ptr, اشاره گر, اشاره گر هوشمند, سی++", "date": "2020-08-27 00:00:00 +0430", "snippet": "توی پست قبلدرباره اینکه چرا باید از اشاره گر های هوشمند استفاده کنیم حرف زدم و کلاس std::unique_ptr رو بررسی سطحی کردیم. توی این پست قراره درباره نوع دیگه ای از اشاره گر های هوشمند بنویسم که برعکس unique_ptr به ما اجازه میده چند شئ بتونن یک حافظه یکسان رو مدیریت کنن.نحوه عملکردکلاس shared_ptr این..." }, { "title": "اشاره گر های هوشمند: unique_ptr", "url": "/posts/smart-poitners-unique-ptr/", "categories": "سی++", "tags": "C++, make_unique, smart pointer, unique, unique_ptr, اشاره گر, اشاره گر هوشمند, برنامه نویسی, سی++, سی++ مدرن, سی++ ۱۱", "date": "2020-08-26 00:00:00 +0430", "snippet": "موضوع اشاره گر ها همیشه یکی از چالش های زبان هایی مثل سی و سی++ بوده.اینکه یه حافظه ای رو از سیستم بگیریم، آزادش کنیم و مراقب باشیم که حافظهای که گرفته شده معتبر باشه تا برای استفاده کردن ازش یا آزاد کردنش مشکلیپیش نیاد و هزارتا چیز دیگه.اشاره گر های هوشمند اومدن تا کار مارو راحت کنن. تا دیگه کمت..." }, { "title": "ارث بری چندگانه در سی++", "url": "/posts/multiple-inheritance-in-cpp/", "categories": "سی++", "tags": "C++, Diamond, diamond problem, inheritance, multiple inheritance, virtual, virtual inheritance, ارث بری, ارث بری چندگانه, سی++", "date": "2020-08-19 00:00:00 +0430", "snippet": "سی++ یکی از زبان هاییه که این اجازه رو به ما میده تا کلاسی که نوشتیم چندین کلاس والد داشته باشه یا به عبارت دیگه، قابلیت ارث بری چندگانه یا multiple inheritance رو داره.چطور استفاده می‌شهخودِ ارث بری چندتایی خیلی عجیب غریب نیست و تنها فرقش اینه که موقع نوشتن کلاس، با استفاده از «کاما» میایم و Bas..." }, { "title": "Delegating Constructors", "url": "/posts/delegating-constructors/", "categories": "سی++", "tags": "C++, constructor, delegate, duplicate code, overlapping constructor, سی++", "date": "2020-08-19 00:00:00 +0430", "snippet": "قبلا وقتی داشتم یه کلاسی می‌نوشتم که چنتا کانستراکتور داشت و اون کانستراکتور ها فقط در بخش کوچیکی از کارها باهم تفاوت داشتن، میومدم و کدهارو چندبار کپی می‌کردم.بعد ها اومدم اون قسمتی که بین‌شون مشترکه رو توی یه تابع دیگه قرار دادم و هرجا که نیاز بود اون رو صدا می‌زدم.نمی‌دونستم که سی++ یه قابلیتی..." }, { "title": "معرفی std::string_view", "url": "/posts/std-string-view-cpp17/", "categories": "سی++", "tags": "C++, C++17, char, std, std::string_view, string view, سی++", "date": "2020-08-17 00:00:00 +0430", "snippet": "یکی از ویژگی های جالبی که به سی++ ۱۷ اضافه شده، std::string_view هست که برای کار با رشته های ثابت خیلی زیاد به کار آدم میاد.کد پایین رو ببینید:#include &amp;lt;iostream&amp;gt;#include &amp;lt;string&amp;gt; int main(){ char text[]{ &quot;hello&quot; }; std::string str{ text }; std::string mo..." }, { "title": "فصل ۲۲ دایتل: نکات اضافه", "url": "/posts/deitel-chapter22-extra-tips/", "categories": "سی++", "tags": "bit field, C++, structure, using, سی++", "date": "2020-08-13 00:00:00 +0430", "snippet": "توی این فصل درمورد struct ها، bit field ها، اوپراتور های بیتی (bitwise) و توابع مربوط به دستکاری رشته های در سی صحبت شده.البته دو مورد آخر رو من بلد بودم بنابراین توی این پست دربارشون چیزی نمی‌نویسم. راستی، این آخرین فصل کتاب فیزیکیه و یکی دوتا فصل دیگه هستن که باید اینترنتی خریدشون (=structure ه..." }, { "title": "فصل ۲۱ دایتل: رشته ها", "url": "/posts/deitel-chapter21-strings/", "categories": "سی++", "tags": "C++, STL, string manipulation, strings, کتابخانه استاندارد, دایتل", "date": "2020-08-11 00:00:00 +0430", "snippet": "توی این فصل در مبحث رشته ها در سی++ بیشتر عمیق میشیم. درواقع کلاس string از STL رو بررسی می‌کنیم.پست کوتاهیه چون بیشتر چیزها رو بلد بودم :)تابع compareاین تابع جالبیه که باهاش میتونیم بخش خاصی از یک رشته رو با بخش خاصی از یک رشته دیگه مقایسه کنیم.اینطوری:string str1{&quot;This is string&quot;};st..." }, { "title": "فصل ۱۹ دایتل: نکاتی درباره پیاده سازی ساختمان داده ها", "url": "/posts/deitel-chapter19-data-structure/", "categories": "سی++", "tags": "C++, data structure, dependant, dependant name, non-dependant, non-dependant name, دایتل, سی++, ساختمان داده", "date": "2020-08-11 00:00:00 +0430", "snippet": "این فصل از دایتل درباره پیاده سازی ساختمان داده های مرسوم مثل لیست پیوندی، صف، استک و درخت دودویی با استفاده از تمپلیت ها بود. چون من این چیز ها رو از قبل بلد بودم بنابراین این پست بسیار کوتاه بود چون همونطور که میدونیم، من فقط چیزهایی رو می‌نویسم که به نظرم جدیدن.کلاس Self-Referentialکلاس های خو..." }, { "title": "فصل ۱۷ دایتل: نگاهی عمیق تر به Exception Handling", "url": "/posts/deitel-chapter17-exception-handling/", "categories": "سی++", "tags": "exception, exception handling, RAII, STL, unique_ptr, مدیریت استثنا, اشاره گر, اشاره گر هوشمند, دایتل, سی++", "date": "2020-07-27 00:00:00 +0430", "snippet": "توی این فصل قراره نکات عمیق تری رو راجع به مدیریت استثنا ها یاد بگیریم بنابراین مفاهیم اولیه مثل اینکه exception چی هست و چرا باید استفاده بشه و چطور میشه یک استثنا برای خودمون بنویسیم رو ذکر نمی‌کنم.یادآورینکته اول اینکه همیشه باید سعی کنیم توی بلوک catch، تایپ مربوط به exception رو به صورت رفرن..." }, { "title": "فصل ۱۶ دایتل: الگوریتم های موجود در کتابخانه استاندارد", "url": "/posts/deitel-chapter16-stl-algorithms/", "categories": "سی++", "tags": "algorithm, C++, function object, iterator, lambda, lambda functions, لاندا, پیمایشگر, الگوریتم, دایتل, سی++", "date": "2020-07-22 00:00:00 +0430", "snippet": "در این فصل قراره که یاد بگیریم چطور با استفاده از iterator ها و algorithm(الگوریتم) های موجود در کتابخانه استاندارد سی++ یا همون STL کارهامون رو پیش ببریم. یاد میگیریم که توابع لاندا چی هستن و چطور ازشون استفاده بکنیم، اشاره گر به تابع چیه و چطور میشه ازش استفاده کرد و چیز های دیگه.نکاتی درباره پ..." }, { "title": "نکات جدیدی که از فصل ۱۵ دایتل یاد گرفتم – کتابخانه استاندارد", "url": "/posts/what-ive-learned-from-deitel-chapter-15/", "categories": "سی++", "tags": "adapter container, algorithm, associative container, C++, container, first class container, iterator, near container, STL, کتابخانه, کتابخانه استاندارد, دایتل, سی++", "date": "2020-07-21 00:00:00 +0430", "snippet": "توی این فصل سه بخش از کتابخانه استاندارد سی++ که بهش STL هم میگن رو بررسی می‌کنیم. container ها، iterator ها و algorithm ها. فصل بسیار مهمیهچراکه این کتابخونه بسیاری از کار های مارو راحت تر می‌کنه و اگر خوب بلد باشیم ازش استفاده کنیم، دهن خودمون رو برای پیاده سازی کردن خیلی از چیز ها صاف نمی‌کنیم..." }, { "title": "نکات جدیدی که از فصل ۱۲ سی++ دایتل یاد گرفتم – چندریختی", "url": "/posts/what-ive-learned-from-deitel-chapter14/", "categories": "سی++", "tags": "C++, file, file processing, standard library, یادگیری, پردازش فایل, دایتل, سی++", "date": "2020-06-22 00:00:00 +0430", "snippet": "این فصل دربارهٔ پردازش فایل ها یا همون File Processing بود. بیشتر نکاتش رو از قبل می‌دونستم و صرفا برام مرور بود.کلاس های مورد استفاده‌مونبرای انجام پردازش فایلی باید هدر های iostream و fstream رو اینکلود کنیم. توی fstream این سه تا typedef وجود داره: typedef basic_ifstream &amp;lt;char&amp;gt; ..." }, { "title": "چطور این ۲ هفته رو گذروندم", "url": "/posts/how-i-spent-recent-2-weeks/", "categories": "", "tags": "5Toman, GTA V, فیلم, ۵ تومن, اندروید, برنامه نویسی", "date": "2020-05-23 00:00:00 +0430", "snippet": "هوف! بالاخره پنل ادمین وبلاگمو باز کردم. بعد از آخرین پستم که تقریبا ۱۷ روز پیش بود حالا دوباره اومدم که فرآیند یادگیری‌ و مطالعه‌م رو شروع کنم. توی این تقریبا ۲ هفته کار زیادی نکردم. اولین برنامه‌ی اندرویدم رو نوشتم، چندتا فیلم دیدم و GTA V رو نصب کردم.۵ تومنداستان این برنامه برمیگرده به اونجا ک..." }, { "title": "نکات جدیدی که از فصل ۱۲ سی++ دایتل یاد گرفتم – چندریختی", "url": "/posts/what-ive-learned-from-deitel-chapter12/", "categories": "سی++", "tags": "C++, object oriented, polymorphism, programming, RTTI, virtual, vtable, سی++", "date": "2020-05-04 00:00:00 +0430", "snippet": "تقریبا یه هفته طول کشید تا پاراگراف آخر این پست رو بنویسم که درباره‌یچند ریختی یا polymorphism توی سی++ عه. دلیلش هم همون بهونه‌ی قدیمیم، حال نداشتن، بود. احتمالا وقتی این متن رو میخونید متوجه میشید که به شدت با بی‌حوصلگی نوشته شده، مثال زیاد نزدم و کدی هم ننوشتم. دلیلش هم که خب واضحه.چند ریختی ب..." }, { "title": "یادگیری امروزم از معماری کامپیوتر(۴)", "url": "/posts/daily-computer-architecture-learning4/", "categories": "معماری کامپیوتر", "tags": "branch prediction, BTB, computer architecture, parallel processing, pipeline processing, معماری کامپیوتر", "date": "2020-04-28 00:00:00 +0430", "snippet": "بعد از چندروز دعوا با سگ وحشی افسردگی دوباره امروز تونستم یکم به مطالعه‌م برسم. درواقع علاوه بر یادگیری، اینکه بخوام سریعتر توی وبلاگم دربارش بنویسم هم بهم انگیزه داددرواقع این پست حاصل یادگیری امروزم نیست و تقریبا یه هفته‌ست که روی این بخش گیر کردم. گاهی وقتا آدم سنگین تر از اونه که بخواد کاری ا..." }, { "title": "نکات جدیدی که از فصل ۱۱ سی++ دایتل یاد گرفتم – ارث بری", "url": "/posts/what-ive-learned-from-deitel-chapter11/", "categories": "سی++", "tags": "C++, inheritance, object oriented, programming, یادگیری, ارث بری, برنامه نویسی, دایتل, سی++, شئ گرایی", "date": "2020-04-20 00:00:00 +0430", "snippet": "این فصل از دایتل درباره‌ی ویژگی ارث‌بری توی سی++ بود. نکاتی که برام جدیده رو توی این پست نوشتم.تفاوت is-a relationship و has-a relationshipوقتی یک کلاسی(A) از یک کلاس دیگه(B) ارث بری می‌کنه، میگیم که رابطه‌شون از نوع is-a relationshipهست. یعنی کلاس A نوعی از کلاس B عه؛ مثالش؟ «خودرو» و «وسیله نقل..." }, { "title": "یادگیری امروزم از معماری کامپیوتر موریس مانو (۳)", "url": "/posts/daily-computer-architecture-learning3/", "categories": "معماری کامپیوتر", "tags": "computer architecture, parallel processing, موریس مانو, معماری کامپیوتر, یادگیری, پردازش موازی", "date": "2020-04-13 00:00:00 +0430", "snippet": "مقدمهتوی این پست راجع به تعاریف اولیه پردازش موازی (Parallel Processing) می‌نویسم.پردازش موازی یعنی انجام چند کار همزمان به منظور افزایش سرعت اجرای برنامه. در حالت عادی، دستورات به صورت مرتب پشت سر هم اجرا می‌شدند اما درپردازش موازی، چند task به شکل همزمان انجام می‌شوند.پردازش موازی سطوح مختلفی ا..." }, { "title": "نکاتِ جدیدی که از فصل ۱۰ سی++ دایتل یادگرفتم – نکاتی پراکنده", "url": "/posts/what-ive-learned-from-deitel-chapter10/", "categories": "سی++", "tags": "C++, یادگیری, کامپیوتر, برنامه نویسی, سی++", "date": "2020-04-07 00:00:00 +0430", "snippet": "خب فصل ۱۰ ام از کتاب برنامه نویسی سی++ دایتل رو تموم کردم. اینجا خلاصه ای از چیزای جدیدی که یادگرفتم رو می‌نویسم.string-object literalتوی سی++ ۱۴ میشه با اضافه کردن یک s به انتهای لیترال رشته‌ای‌مون(بعد از دابل کوتیشن، نه قبلش) اون رشته رو تبدیل به یه شئ از کلاس string کرد. مثال:&quot;Hello, Worl..." }, { "title": "یادگیری امروزم از معماری کامپیوتر موریس مانو (۲)", "url": "/posts/daily-computer-architecture-learning2/", "categories": "معماری کامپیوتر", "tags": "CISC, RISC, معماری کامپیوتر, یادگیری", "date": "2020-04-05 00:00:00 +0430", "snippet": "خب دیروز نشد که پست معماری کامپیوتر رو بنویسم. امروز سعی می‌کنم دوتا پست راجع به معماری کامپیوتر موریس مانو بنویسم.این پست درباره‌ی تفاوت های ساده‌ی معماری سیسک و ریسک هست.در حالت خیلی ساده به کامپیوتر هایی که تعداد زیادی دستورات پیچیده دارن میگن Complex Instruction Set Computer یا CISC.ایده‌ی RI..." }, { "title": "چرا امروز نتونستم به کارهام برسم", "url": "/posts/why-im-wasting-my-time/", "categories": "", "tags": "", "date": "2020-04-04 00:00:00 +0430", "snippet": "چرا امروز(و روز های مشابه) نتونستم به کارهام برسم؟ چیزی که فکر میکنم vs چیزی که احساس می‌کنم.احساسامروز که بیدار شدم احساس کردم حس هیچکاری رو ندارم. نمیدونم، فقط احساسمیکنم دلم میخواد استراحت کنم. چون خسته شدم از بس همش کار کردم و یا استرس داشتم که باید برای ادامه‌ی زندگیم چیکار کنم. و بخاطر این ..." }, { "title": "یادگیری امروزم از کتاب معماری کامپیوتر موریس مانو(۱)", "url": "/posts/daily-computer-architecture-learning/", "categories": "معماری کامپیوتر", "tags": "موریس مانو, معماری کامپیوتر, یادگیری, کامپیوتر", "date": "2020-04-03 00:00:00 +0430", "snippet": "امروز درباره‌ی اینتراپت(وقفه) ها در معماری کامپیوتر خوندم. امیدوارم مطالبی که فهمیدم درست باشن ! :)متاسفانه توی مطالعه معماری خیلی کًند پیش میرم ! :((اینتراپت با ساب‌روتین ها سه تا تفاوت مهم داره: اینتراپت معمولا بجای اینکه از طریق اجرای یک instruction اجرا بشه، با انتشار یک سیگنال درونی/بیرونی ..." }, { "title": "از فصل نهم کتاب برنامه نویسی سی++ دایتل چی یادگرفتم", "url": "/posts/what-i-learned-from-deitel-chapter9/", "categories": "سی++", "tags": "C++, یادگیری, کتاب, دایتل, سی++", "date": "2020-03-29 00:00:00 +0430", "snippet": "فصل نهم از کتاب C++ How To Program (نگارش ۲۰۱۷) رو تموم کردم و توی این پست نکاتی که از این فصل یادگرفتم(و یادم مونده=) ) رو می‌نویسم.تابع نابودگر (Destructor)علاوه بر ترتیب اجرا شدنش برای اشیاء مختلف که به صورت «از بیرون به داخل» عه، وظیفه‌ی دیستراکتور درواقع Termination housekeeping عه. مثالش می..." } ]
